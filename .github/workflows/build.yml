name: build app

on:
  push:
    branches:
      - main
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:

      - uses: actions/checkout@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          role-duration-seconds: 1200
          role-session-name: MySessionName

      - name: Build with Gradle Wrapper
        id: build
        run: |
           ./gradlew build

      - name: setup insecure registry
        id: setup-insecure-registry
        run: |
          echo { | sudo tee /etc/docker/daemon.json
          echo "\"insecure-registries\" : [\"https://grzegorzewski.org:5005\"]" | sudo tee -a /etc/docker/daemon.json
          echo } | sudo tee -a /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Registry
        id: login-to-registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.SG_REGISTRY_URL }}
          username: ${{ secrets.SG_REGISTRY_USER }}
          password: ${{ secrets.SG_REGISTRY_PASSWORD   }}

      - name: Build, tag, and push image to a registry
        id: build-publish
        env:
          REGISTRY: ${{ secrets.SG_REGISTRY_URL }}
          REPOSITORY: banks
        run: |
          export BUILD_DATE=$(date +'%Y-%m-%d_%H-%M')
          docker buildx build . -f dev-ops/docker/Dockerfile -t $REGISTRY/$REPOSITORY:latest -t $REGISTRY/$REPOSITORY:$BUILD_DATE-$(git rev-parse --short "$GITHUB_SHA") --platform linux/x86_64 --load
          docker buildx build . -f dev-ops/docker/Dockerfile-debug -t $REGISTRY/$REPOSITORY:latest-debug -t $REGISTRY/$REPOSITORY:$BUILD_DATE-$(git rev-parse --short "$GITHUB_SHA")-debug --platform linux/x86_64 --load
          docker push $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$BUILD_DATE-$(git rev-parse --short "$GITHUB_SHA")
          docker push $REGISTRY/$REPOSITORY:latest-debug
          docker push $REGISTRY/$REPOSITORY:$BUILD_DATE-$(git rev-parse --short "$GITHUB_SHA")-debug